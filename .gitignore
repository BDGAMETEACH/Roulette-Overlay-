# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Log/OS Files
*.log

# Android Studio generated files and folders
captures/
.externalNativeBuild/
.cxx/
*.aab
*.apk
output-metadata.json

# IntelliJ
*.iml
.idea/
misc.xml
deploymentTargetDropDown.xml
render.experimental.xml

# Keystore files
*.jks
*.keystore

# Google Services (e.g. APIs or Firebase)
google-services.json

# Android Profiling
*.hprof
<!doctype html>

<html lang="bn">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Roulette Overlay — Live Demo</title>
  <meta name="theme-color" content="#0b1a3b" />
  <style>
    :root{--bg:#071026;--fg:#e6eef8;--muted:#9fb0d4;--panel:#0b1a3b}
    html,body{height:100%}
    body{margin:0;background:var(--bg);color:var(--fg);font-family:system-ui,Segoe UI,Inter,Roboto,Arial,sans-serif}
    .wrap{max-width:820px;margin:0 auto;padding:16px}
    h1{font-size:20px;margin:0 0 8px}
    p{margin:6px 0}
    .btn{display:inline-block;padding:10px 14px;border-radius:12px;border:1px solid rgba(255,255,255,.12);background:#10224f;color:#fff;text-decoration:none}
    .hint{color:var(--muted);font-size:12px}
    /* Floating overlay */
    .overlay{position:fixed;right:12px;bottom:12px;z-index:999999;background:var(--panel);color:#fff;padding:12px;border-radius:14px;box-shadow:0 12px 34px rgba(0,0,0,.55);min-width:240px;max-width:92vw}
    .row{display:flex;gap:8px;align-items:center;flex-wrap:wrap}
    input[type=number]{width:90px;padding:8px;border-radius:10px;border:1px solid rgba(255,255,255,.2);background:#091634;color:#fff}
    button{padding:8px 12px;border-radius:10px;border:1px solid rgba(255,255,255,.2);background:#1a3a90;color:#fff}
    .pill{display:inline-flex;gap:6px;align-items:center;background:rgba(255,255,255,.06);padding:6px 10px;border-radius:999px}
    .k{font-size:12px;opacity:.9;margin-top:6px;white-space:pre-wrap}
    .drag{touch-action:none;user-select:none;cursor:grab}
    .muted{color:var(--muted)}
    .card{background:#081227;border-radius:14px;padding:12px;margin-top:12px;box-shadow:0 8px 24px rgba(0,0,0,.4)}
    table{width:100%;border-collapse:collapse}
    th,td{padding:6px;border-bottom:1px dashed rgba(255,255,255,.08);font-size:13px}
  </style>
</head>
<body>
  <div class="wrap">
    <h1>Roulette Overlay — Live Demo</h1>
    <p class="hint">এই পেজ খুললেই ডান‑নিচে ভাসমান Overlay আসবে। শেষ নাম্বার লিখে <b>Add</b> চাপুন—সঙ্গে সঙ্গে প্রতিবেশী সাজেশন দেখাবে।</p>
    <div class="card">
      <p><b>ব্যবহার:</b> ১) এই পেজটি Browser‑এ <i>Add to Home screen</i> করুন ২) খেলতে গেলে এই পেজটি ওপেন রাখুন বা Split‑screen/Floating browser এ আনুন।</p>
      <p class="hint">Disclaimer: রুলেট র‌্যান্ডম। এই টুল কোনো নির্ভুল জয়ের নিশ্চয়তা দেয় না; কেবল ট্র্যাকিং/ভিজ্যুয়াল/হিউরিস্টিক। সাইটের টার্মস/আইন মেনে ব্যবহার করুন।</p>
    </div>
    <div class="card">
      <table>
        <thead><tr><th>#</th><th>Count</th><th>%</th></tr></thead>
        <tbody id="t"></tbody>
      </table>
      <div class="hint">টেবিলটি কেবল ভিউ; মূল কাজ Overlay বক্সে হবে।</div>
    </div>
  </div>  <!-- Overlay UI -->  <div id="ov" class="overlay drag" role="dialog" aria-label="Roulette helper">
    <div style="font-weight:700;margin-bottom:6px">Roulette Helper</div>
    <div id="txt" class="k">Enter last (0‑36)</div>
    <div class="row" style="margin-top:6px">
      <input id="in" type="number" min="0" max="36" placeholder="e.g. 17" />
      <button id="add">Add</button>
      <button id="hide" title="Hide overlay">Hide</button>
    </div>
    <div class="row" style="margin-top:8px">
      <span class="pill">Last: <b id="last">-</b></span>
      <span class="pill">Streak: <b id="streak">0</b></span>
    </div>
  </div>  <script>
    // ===== Model =====
    const S={spins:[],count:Array(37).fill(0),streak:0,last:null};
    const red=new Set([1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36]);

    // ===== Elements =====
    const $=s=>document.querySelector(s);
    const txt=$('#txt'), input=$('#in'), last=$('#last'), streak=$('#streak'), tbody=$('#t');

    function add(n){ if(!(n>=0&&n<=36)) return; S.spins.push(n); S.count[n]++; S.streak=(S.last===n)?(S.streak+1):1; S.last=n; render(); save(); }

    function render(){ const total=S.spins.length; last.textContent=S.last??'-'; streak.textContent=S.streak; if(!total){ txt.textContent='Enter last (0‑36)'; return; }
      const L=S.last; const neigh=[(L+1)%37,(L+36)%37,(L+2)%37,(L+35)%37].sort((a,b)=>S.count[b]-S.count[a]);
      const r=S.spins.filter(x=>red.has(x)).length; const rPct= total? (r/total*100).toFixed(1):'0.0';
      txt.textContent=`Last ${L} → neighbors: ${neigh.join(', ')}\nRed ratio ${rPct}%`;
      // table
      let rows=''; for(let i=0;i<=36;i++){ const c=S.count[i]||0; const pct= total? ((c/total*100).toFixed(2)): '0.00'; rows+=`<tr><td>${i}</td><td>${c}</td><td>${pct}%</td></tr>`; }
      tbody.innerHTML=rows;
    }

    // ===== Storage =====
    function save(){ localStorage.setItem('roulette_overlay_demo', JSON.stringify({spins:S.spins})); }
    function load(){ try{ const raw=localStorage.getItem('roulette_overlay_demo'); if(!raw) return; const o=JSON.parse(raw); if(Array.isArray(o.spins)){ o.spins.forEach(n=>{ if(n>=0&&n<=36){ S.spins.push(n); S.count[n]++; }}); S.last=S.spins[S.spins.length-1]??null; S.streak=1; } }catch(e){} }

    // ===== Actions =====
    $('#add').onclick=()=>{ const v=+input.value; if(isNaN(v)||v<0||v>36){ txt.textContent='0‑36 only'; return;} add(v); input.value=''; };
    $('#hide').onclick=()=>{ document.getElementById('ov').style.display='none'; };

    // ===== Dragging =====
    (function(){ const ov=$('#ov'); let down=false,sx=0,sy=0,ox=0,oy=0; ov.addEventListener('pointerdown',e=>{down=true; sx=e.clientX; sy=e.clientY; ox=ov.offsetLeft; oy=ov.offsetTop; ov.setPointerCapture(e.pointerId);}); ov.addEventListener('pointermove',e=>{ if(!down) return; ov.style.left=(ox+e.clientX-sx)+'px'; ov.style.top=(oy+e.clientY-sy)+'px';}); ov.addEventListener('pointerup',()=>down=false); })();

    // Init
    load(); render();
  </script></body>
</html>